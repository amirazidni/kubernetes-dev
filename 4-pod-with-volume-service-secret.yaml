apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-deployment2
spec:
  selector:
    matchLabels:
      app: my-app2
  template:
    metadata:
      labels:
        app: my-app2
    spec:
      containers:
      - name: service-mariadb
        image: mariadb:10.4 # registry name
        args: # "command" in docker-compose
          - --init-file
          - /shared-files/4-schema.sql
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mariadb-credentials
                key: mysql-root-password
          - name: MYSQL_ROOT_HOST
            value: "%" # allow access from all host
        volumeMounts:
          - name: db-data
            mountPath: /var/lib/mysql # inside container
          - name: root
            mountPath: /shared-files
      volumes: # sources / sumber
        - name: db-data
          hostPath:
            path: /data/volume-example # host path location
        - name: root
          hostPath:
            path: /
---
apiVersion: v1
kind: Service
metadata:
  name: my-service2
spec:
  type: LoadBalancer
  selector:
    name: my-app2
  ports:
    - port: 3306
      targetPort: 3306
---
apiVersion: v1
kind: Secret
metadata:
  name: mariadb-credentials
type: Opaque
data:
  mysql-password: UGFzc3dvcmQuMQ==
  mysql-root-password: UGFzc3dvcmQuMQ==
---

# prune unused config file
# kubectl apply -f 4-pod-with-volume-service-secret.yaml --prune --all

# SQL query
# show databases;
# use hello_world;
# show tables;
# INSERT INTO users (firstName, lastName, birth) VALUES ("amira", "zidni", STR_TO_DATE('1-01-2000', '%d-%m-%Y'))
# select * from users;

# how to get dns
# nslookup <service-name>